POP START 
 
 

 num of try 1



Subgoal Selected : ON(on-1: a , on-2: e)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: a sunderob: e 
actin bounds : STACK(sob: a,sunderob: e)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: a,sunderob: e)  
              link receiver  : GOALS()  
              link condition: CLEAR(clear-1: a)  
Subgoal removed : CLEAR in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: a,sunderob: e)  
              link receiver  : GOALS()  
              link condition: ON(on-1: a , on-2: e)  
2 new Subgoals added as bellow: 
HOLDING(sob: a)  
CLEAR(sunderob: e)  

find thread for new action : STACK(sob: a,sunderob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: a,sunderob: e)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 2



Subgoal Selected : ON-TABLE(on-table-1: e)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: e 
actin bounds : PUT-DOWN(ob: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: e)  
              link receiver  : GOALS()  
              link condition: ON-TABLE(on-table-1: e)  
1 new Subgoals added as bellow: 
HOLDING(ob: e)  

find thread for new action : PUT-DOWN(ob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: e)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 3



Subgoal Selected : ON(on-1: h , on-2: i)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: h sunderob: i 
actin bounds : STACK(sob: h,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : GOALS()  
              link condition: CLEAR(clear-1: h)  
Subgoal removed : CLEAR in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : GOALS()  
              link condition: ON(on-1: h , on-2: i)  
2 new Subgoals added as bellow: 
HOLDING(sob: h)  
CLEAR(sunderob: i)  

find thread for new action : STACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: h,sunderob: i)  
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 4



Subgoal Selected : ON(on-1: i , on-2: d)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: i sunderob: d 
actin bounds : STACK(sob: i,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: i,sunderob: d)  
              link receiver  : GOALS()  
              link condition: ON(on-1: i , on-2: d)  
2 new Subgoals added as bellow: 
HOLDING(sob: i)  
CLEAR(sunderob: d)  

find thread for new action : STACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: i,sunderob: d)  
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 5



Subgoal Selected : ON-TABLE(on-table-1: d)   for action GOALS()  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : GOALS()  
              link condition: ON(on-1: g , on-2: f)  
Subgoal removed : ON in action : GOALS()  
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : GOALS()  
              link condition: ON-TABLE(on-table-1: f)  
Subgoal removed : ON-TABLE in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : GOALS()  
              link condition: ON-TABLE(on-table-1: d)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to GOALS()   for state ON-TABLE(on-table-1: d)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to GOALS()  
GOALS()   has Relation to link  from  INITIAL-STATE()   to GOALS()  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 6



Subgoal Selected : ON(on-1: b , on-2: c)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob: c 
actin bounds : STACK(sob: b,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : GOALS()  
              link condition: CLEAR(clear-1: b)  
Subgoal removed : CLEAR in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : GOALS()  
              link condition: ON(on-1: b , on-2: c)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: c)  

find thread for new action : STACK(sob: b,sunderob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: c)  
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 7



Subgoal Selected : ON(on-1: c , on-2: g)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: c sunderob: g 
actin bounds : STACK(sob: c,sunderob: g)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: c,sunderob: g)  
              link receiver  : GOALS()  
              link condition: ON(on-1: c , on-2: g)  
2 new Subgoals added as bellow: 
HOLDING(sob: c)  
CLEAR(sunderob: g)  

find thread for new action : STACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: c,sunderob: g)  
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 8



Subgoal Selected : HOLDING(sob: a)   for action STACK(sob: a,sunderob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: a,sunderob: e)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: a,sunderob: e)  
              link receiver  : STACK(sob: a,sunderob: e)  
              link condition: CLEAR(sunderob: e)  
Subgoal removed : CLEAR in action : STACK(sob: a,sunderob: e)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: e)  
              link receiver  : STACK(sob: a,sunderob: e)  
              link condition: HOLDING(sob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: e)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: e)  
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 9



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: e 
actin bounds : UNSTACK(sob: e,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: null)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
ON(sob: e , sunderob: null)  
CLEAR(sob: e)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: e,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: e,sunderob: null)  
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: a,sunderob: e)   to STACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action UNSTACK(sob: e,sunderob: null)   comes before action UNSTACK(sob: a,sunderob: e)  
 num of try 10



Subgoal Selected : HOLDING(sob: h)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: h 
actin bounds : UNSTACK(sob: h,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: h,sunderob: i)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
Subgoal removed : CLEAR in action : STACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: HOLDING(sob: h)  
3 new Subgoals added as bellow: 
ON(sob: h , sunderob: i)  
CLEAR(sob: h)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: h,sunderob: i)  
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 11



Subgoal Selected : HOLDING(sob: i)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: HOLDING(sob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 num of try 12



Subgoal Selected : CLEAR(sunderob: d)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
 Internal Action Selected : UNSTACK(sob: e,sunderob: null)  
bounding operation for UNSTACK(sob: e,sunderob: null)   for sunderob: d 
actin bounds : UNSTACK(sob: e,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: d)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: CLEAR(sunderob: d)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between UNSTACK(sob: e,sunderob: d)   to STACK(sob: i,sunderob: d)   for state CLEAR(sunderob: d)  
GOALS()   has Relation to link  from  UNSTACK(sob: e,sunderob: d)   to STACK(sob: i,sunderob: d)  
PUT-DOWN(ob: e)   has Relation to link  from  UNSTACK(sob: e,sunderob: d)   to STACK(sob: i,sunderob: d)  
STACK(sob: i,sunderob: d)   has Relation to link  from  UNSTACK(sob: e,sunderob: d)   to STACK(sob: i,sunderob: d)  
UNSTACK(sob: a,sunderob: e)   has Relation to link  from  UNSTACK(sob: e,sunderob: d)   to STACK(sob: i,sunderob: d)  
UNSTACK(sob: e,sunderob: d)   has Relation to link  from  UNSTACK(sob: e,sunderob: d)   to STACK(sob: i,sunderob: d)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 13



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 14



Subgoal Selected : CLEAR(sunderob: c)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: CLEAR(sunderob: c)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: b,sunderob: c)   for state CLEAR(sunderob: c)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: c)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: c)  
STACK(sob: b,sunderob: c)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: c)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 15



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action STACK(sob: b,sunderob: c)   comes before action PICK-UP(ob1: c)  
 num of try 16



Subgoal Selected : CLEAR(sunderob: g)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: g 
actin bounds : STACK(sob: g,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: g,sunderob: null)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: CLEAR(sunderob: g)  
2 new Subgoals added as bellow: 
HOLDING(sob: g)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: g,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: g,sunderob: null)  
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: g,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 17



Subgoal Selected : ON(sob: a , sunderob: e)   for action UNSTACK(sob: a,sunderob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: a sunderob: e 
actin bounds : STACK(sob: a,sunderob: e)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: a,sunderob: e)  
              link receiver  : UNSTACK(sob: a,sunderob: e)  
              link condition: CLEAR(sob: a)  
Subgoal removed : CLEAR in action : UNSTACK(sob: a,sunderob: e)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: a,sunderob: e)  
              link receiver  : UNSTACK(sob: a,sunderob: e)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: a,sunderob: e)  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: a,sunderob: e)  
              link receiver  : UNSTACK(sob: a,sunderob: e)  
              link condition: ON(sob: a , sunderob: e)  
2 new Subgoals added as bellow: 
HOLDING(sob: a)  
CLEAR(sunderob: e)  

find thread for new action : STACK(sob: a,sunderob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: a,sunderob: e)  
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 18



Subgoal Selected : ON(sob: e , sunderob: d)   for action UNSTACK(sob: e,sunderob: d)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : UNSTACK(sob: e,sunderob: d)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: e,sunderob: d)  
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : UNSTACK(sob: e,sunderob: d)  
              link condition: CLEAR(sob: e)  
Subgoal removed : CLEAR in action : UNSTACK(sob: e,sunderob: d)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : UNSTACK(sob: e,sunderob: d)  
              link condition: ON(sob: e , sunderob: d)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)   for state ON(sob: e , sunderob: d)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
STACK(sob: i,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
STACK(sob: b,sunderob: c)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
UNSTACK(sob: a,sunderob: e)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
UNSTACK(sob: e,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 19



Subgoal Selected : ON(sob: h , sunderob: i)   for action UNSTACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: h sunderob: i 
actin bounds : STACK(sob: h,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : UNSTACK(sob: h,sunderob: i)  
              link condition: CLEAR(sob: h)  
Subgoal removed : CLEAR in action : UNSTACK(sob: h,sunderob: i)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : UNSTACK(sob: h,sunderob: i)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : UNSTACK(sob: h,sunderob: i)  
              link condition: ON(sob: h , sunderob: i)  
2 new Subgoals added as bellow: 
HOLDING(sob: h)  
CLEAR(sunderob: i)  

find thread for new action : STACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: h,sunderob: i)  
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 20



Subgoal Selected : CLEAR(ob1: i)   for action PICK-UP(ob1: i)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: i)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: i)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: i)  
              link condition: CLEAR(ob1: i)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: i)   for state CLEAR(ob1: i)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
STACK(sob: i,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
STACK(sob: b,sunderob: c)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
UNSTACK(sob: e,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
UNSTACK(sob: h,sunderob: i)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
PICK-UP(ob1: i)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
Constrain added for predict thread sunderob not to be i
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 21



Subgoal Selected : ON-TABLE(ob1: i)   for action PICK-UP(ob1: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: i 
actin bounds : PUT-DOWN(ob: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: i)  
              link receiver  : PICK-UP(ob1: i)  
              link condition: ON-TABLE(ob1: i)  
1 new Subgoals added as bellow: 
HOLDING(ob: i)  

find thread for new action : PUT-DOWN(ob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: i)  
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob a)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob e)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob b)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob c)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 22



Subgoal Selected : CLEAR(ob1: b)   for action PICK-UP(ob1: b)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b 
actin bounds : STACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : PICK-UP(ob1: b)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: b)  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : PICK-UP(ob1: b)  
              link condition: CLEAR(ob1: b)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 23



Subgoal Selected : ON-TABLE(ob1: b)   for action PICK-UP(ob1: b)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: b 
actin bounds : PUT-DOWN(ob: b)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: b)  
              link receiver  : PICK-UP(ob1: b)  
              link condition: ON-TABLE(ob1: b)  
1 new Subgoals added as bellow: 
HOLDING(ob: b)  

find thread for new action : PUT-DOWN(ob: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: b)  
Constrain added for action :PUT-DOWN (ob: b)   Constrain is not equlity for (ob a)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: b)   Constrain is not equlity for (ob e)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: b)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: b)   Constrain is not equlity for (ob i)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: b)   Constrain is not equlity for (ob c)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 24



Subgoal Selected : CLEAR(ob1: c)   for action PICK-UP(ob1: c)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: c)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: c)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: c)  
              link condition: CLEAR(ob1: c)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: c)   for state CLEAR(ob1: c)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
STACK(sob: i,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
STACK(sob: b,sunderob: c)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
STACK(sob: c,sunderob: g)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
UNSTACK(sob: e,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PICK-UP(ob1: i)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PICK-UP(ob1: c)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
Constrain added for predict thread sunderob not to be c
Constrain added for predict thread sunderob not to be c
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 25



Subgoal Selected : ON-TABLE(ob1: c)   for action PICK-UP(ob1: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: c 
actin bounds : PUT-DOWN(ob: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: c)  
              link receiver  : PICK-UP(ob1: c)  
              link condition: ON-TABLE(ob1: c)  
1 new Subgoals added as bellow: 
HOLDING(ob: c)  

find thread for new action : PUT-DOWN(ob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: c)  
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob a)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob e)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob i)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob b)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 26



Subgoal Selected : HOLDING(sob: g)   for action STACK(sob: g,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: g 
actin bounds : UNSTACK(sob: g,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: g,sunderob: null)  
              link receiver  : STACK(sob: g,sunderob: null)  
              link condition: HOLDING(sob: g)  
3 new Subgoals added as bellow: 
ON(sob: g , sunderob: null)  
CLEAR(sob: g)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: g,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: g,sunderob: null)  
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: a,sunderob: e)   to UNSTACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: g,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :UNSTACK(sob: g,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: g,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: g,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: g,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: g,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: g,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: g,sunderob: null)   comes before action STACK(sob: a,sunderob: e)  
 action UNSTACK(sob: e,sunderob: d)   comes before action UNSTACK(sob: g,sunderob: null)  
 action UNSTACK(sob: g,sunderob: null)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: g,sunderob: null)  
 action UNSTACK(sob: g,sunderob: null)   comes before action STACK(sob: b,sunderob: null)  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: g,sunderob: null)  
 num of try 27



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: g,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: g,sunderob: null)   for sunderob: c 
actin bounds : STACK(sob: g,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: g,sunderob: c)  
              link condition: CLEAR(sunderob: c)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: g,sunderob: c)   for state CLEAR(sunderob: c)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
STACK(sob: i,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
STACK(sob: b,sunderob: c)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
STACK(sob: c,sunderob: g)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
UNSTACK(sob: e,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
PICK-UP(ob1: i)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
PICK-UP(ob1: c)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
STACK(sob: g,sunderob: c)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: g,sunderob: c)  
Constrain added for predict thread sunderob not to be c
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 28



Subgoal Selected : HOLDING(sob: a)   for action STACK(sob: a,sunderob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : STACK(sob: a,sunderob: e)  
              link condition: HOLDING(sob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: e,sunderob: d)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action STACK(sob: b,sunderob: null)  
 action PICK-UP(ob1: c)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 29



Subgoal Selected : CLEAR(sunderob: e)   for action STACK(sob: a,sunderob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: e 
actin bounds : UNSTACK(sob: null,sunderob: e)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: a,sunderob: e)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: a,sunderob: e)  
              link receiver  : STACK(sob: a,sunderob: e)  
              link condition: HOLDING(sob: a)  
Subgoal removed : HOLDING in action : STACK(sob: a,sunderob: e)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: e)  
              link receiver  : STACK(sob: a,sunderob: e)  
              link condition: CLEAR(sunderob: e)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: e)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: e)  
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :UNSTACK(sob: a,sunderob: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: a,sunderob: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: a,sunderob: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: a,sunderob: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: e)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: e,sunderob: d)   comes before action UNSTACK(sob: a,sunderob: e)  
 action UNSTACK(sob: a,sunderob: e)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: a,sunderob: e)  
 action UNSTACK(sob: a,sunderob: e)   comes before action STACK(sob: b,sunderob: null)  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: a,sunderob: e)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 30



Subgoal Selected : HOLDING(sob: h)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: h 
actin bounds : UNSTACK(sob: h,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: h,sunderob: i)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
Subgoal removed : CLEAR in action : STACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: HOLDING(sob: h)  
3 new Subgoals added as bellow: 
ON(sob: h , sunderob: i)  
CLEAR(sob: h)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: h,sunderob: i)  
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: a,sunderob: e)   to UNSTACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: h,sunderob: i)   comes before action STACK(sob: a,sunderob: e)  
 action UNSTACK(sob: e,sunderob: d)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action UNSTACK(sob: h,sunderob: i)   comes before action STACK(sob: b,sunderob: null)  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: h,sunderob: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 31



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: i 
actin bounds : UNSTACK(sob: i,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: null)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: null)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: null)  
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: a,sunderob: e)   to UNSTACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: null)   comes before action UNSTACK(sob: h,sunderob: i)  
 action UNSTACK(sob: i,sunderob: null)   comes before action STACK(sob: a,sunderob: e)  
 action UNSTACK(sob: e,sunderob: d)   comes before action UNSTACK(sob: i,sunderob: null)  
 action UNSTACK(sob: i,sunderob: null)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: i,sunderob: null)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: i,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 32



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: a,sunderob: e)   to UNSTACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: b,sunderob: null)   comes before action STACK(sob: a,sunderob: e)  
 action UNSTACK(sob: e,sunderob: d)   comes before action UNSTACK(sob: b,sunderob: null)  
 action UNSTACK(sob: b,sunderob: null)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: b,sunderob: null)  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 33



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob:  null  
actin bounds : UNSTACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
Subgoal removed : HOLDING in action : STACK(sob: b,sunderob: null)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: a,sunderob: e)   to UNSTACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: b,sunderob: null)   comes before action STACK(sob: a,sunderob: e)  
 action UNSTACK(sob: e,sunderob: d)   comes before action UNSTACK(sob: b,sunderob: null)  
 action UNSTACK(sob: b,sunderob: null)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: b,sunderob: null)  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 34



Subgoal Selected : HOLDING(ob: b)   for action PUT-DOWN(ob: b)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : PUT-DOWN(ob: b)  
              link condition: HOLDING(ob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: a,sunderob: e)   to UNSTACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: e,sunderob: d)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : CLEAR(sob: b)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: b,sunderob: null)   comes before action STACK(sob: a,sunderob: e)  
 action UNSTACK(sob: e,sunderob: d)   comes before action UNSTACK(sob: b,sunderob: null)  
 action UNSTACK(sob: b,sunderob: null)   comes