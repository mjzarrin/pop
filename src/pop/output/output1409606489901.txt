POP START 
 
 

 num of try 1



Subgoal Selected : ON-TABLE(on-table-1: a)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: a 
actin bounds : PUT-DOWN(ob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PUT-DOWN(ob: a)  
              link receiver  : GOALS()  
              link condition: ON-TABLE(on-table-1: a)  
1 new Subgoals added as bellow: 
HOLDING(ob: a)  

find thread for new action : PUT-DOWN(ob: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 2



Subgoal Selected : CLEAR(clear-1: b)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: b 
actin bounds : PUT-DOWN(ob: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PUT-DOWN(ob: b)  
              link receiver  : GOALS()  
              link condition: CLEAR(clear-1: b)  
1 new Subgoals added as bellow: 
HOLDING(ob: b)  

find thread for new action : PUT-DOWN(ob: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: b)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 3



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 4



Subgoal Selected : HOLDING(ob: b)   for action PUT-DOWN(ob: b)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : PUT-DOWN(ob: b)  
              link condition: HOLDING(ob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 5



Subgoal Selected : CLEAR(ob1: a)   for action PICK-UP(ob1: a)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: a)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: a)  
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: a)  
              link condition: CLEAR(ob1: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: a)   for state CLEAR(ob1: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 6



Subgoal Selected : ON-TABLE(ob1: a)   for action PICK-UP(ob1: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: a 
actin bounds : PUT-DOWN(ob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PUT-DOWN(ob: a)  
              link receiver  : PICK-UP(ob1: a)  
              link condition: ON-TABLE(ob1: a)  
1 new Subgoals added as bellow: 
HOLDING(ob: a)  

find thread for new action : PUT-DOWN(ob: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: a)  
Constrain added for action :PUT-DOWN (ob: a)   Constrain is not equlity for (ob b)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 7



Subgoal Selected : CLEAR(ob1: b)   for action PICK-UP(ob1: b)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b 
actin bounds : STACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : PICK-UP(ob1: b)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: b)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : PICK-UP(ob1: b)  
              link condition: CLEAR(ob1: b)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 8



Subgoal Selected : ON-TABLE(ob1: b)   for action PICK-UP(ob1: b)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: b)  
              link condition: ON-TABLE(ob1: b)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: b)   for state ON-TABLE(ob1: b)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 9



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 10



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
 action PICK-UP(ob1: b)   comes before action PICK-UP(ob1: b)  
 num of try 11



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: b,sunderob: null)   for sunderob: a 
actin bounds : STACK(sob: b,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: b,sunderob: a)  
              link condition: CLEAR(sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: b,sunderob: a)   for state CLEAR(sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 12



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 13



Subgoal Selected : CLEAR(ob1: b)   for action PICK-UP(ob1: b)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b 
actin bounds : STACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : PICK-UP(ob1: b)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: b)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : PICK-UP(ob1: b)  
              link condition: CLEAR(ob1: b)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 14



Subgoal Selected : ON-TABLE(ob1: b)   for action PICK-UP(ob1: b)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: b)  
              link condition: ON-TABLE(ob1: b)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: b)   for state ON-TABLE(ob1: b)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: b)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 15



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 16



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
 num of try 17



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: b,sunderob: null)   for sunderob: a 
actin bounds : STACK(sob: b,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: b,sunderob: a)  
              link condition: CLEAR(sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: b,sunderob: a)   for state CLEAR(sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 18



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 19



Subgoal Selected : ON(sob: b , sunderob: null)   for action UNSTACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : STACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: CLEAR(sob: b)  
Subgoal removed : CLEAR in action : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: null)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ON(sob: b , sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 20



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 21



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
 num of try 22



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: b,sunderob: null)   for sunderob: a 
actin bounds : STACK(sob: b,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: b,sunderob: a)  
              link condition: CLEAR(sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: b,sunderob: a)   for state CLEAR(sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 23



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 24



Subgoal Selected : ON(sob: b , sunderob: null)   for action UNSTACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : STACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: CLEAR(sob: b)  
Subgoal removed : CLEAR in action : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: null)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ON(sob: b , sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 25



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 26



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
 num of try 27



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: b,sunderob: null)   for sunderob: a 
actin bounds : STACK(sob: b,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: b,sunderob: a)  
              link condition: CLEAR(sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: b,sunderob: a)   for state CLEAR(sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 28



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 29



Subgoal Selected : ON(sob: b , sunderob: null)   for action UNSTACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : STACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: CLEAR(sob: b)  
Subgoal removed : CLEAR in action : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: null)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ON(sob: b , sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 30



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 31



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
 action PICK-UP(ob1: b)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 32



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob:  null  
actin bounds : UNSTACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
Subgoal removed : HOLDING in action : STACK(sob: b,sunderob: null)  
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
 num of try 33



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 34



Subgoal Selected : ON(sob: b , sunderob: null)   for action UNSTACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : STACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: CLEAR(sob: b)  
Subgoal removed : CLEAR in action : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: null)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ON(sob: b , sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 35



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 36



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
 num of try 37



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: b,sunderob: null)   for sunderob: a 
actin bounds : STACK(sob: b,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: b,sunderob: a)  
              link condition: CLEAR(sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: b,sunderob: a)   for state CLEAR(sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 38



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 39



Subgoal Selected : ON(sob: b , sunderob: null)   for action UNSTACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : STACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: CLEAR(sob: b)  
Subgoal removed : CLEAR in action : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: null)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ON(sob: b , sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 40



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 41



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
 num of try 42



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: b,sunderob: null)   for sunderob: a 
actin bounds : STACK(sob: b,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: b,sunderob: a)  
              link condition: CLEAR(sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: b,sunderob: a)   for state CLEAR(sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 43



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: a,sunderob: null)   Constrain is not equlity for (sunderob null)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 44



Subgoal Selected : ON(sob: b , sunderob: null)   for action UNSTACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : STACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: CLEAR(sob: b)  
Subgoal removed : CLEAR in action : UNSTACK(sob: b,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: null)  
 Link Added : 
              link provider : STACK(sob: b,sunderob: null)  
              link receiver  : UNSTACK(sob: b,sunderob: null)  
              link condition: ON(sob: b , sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: null)  
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 45



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 46



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
 action PICK-UP(ob1: b)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 47



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : STACK(sob: null,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: null)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: null,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: null,sunderob: null)  
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 48



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: a)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: null)   to UNSTACK(sob: b,sunderob: null)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 49



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
 action PICK-UP(ob1: b)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 50



Subgoal Selected : HOLDING(sob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1:  null  
actin bounds : PICK-UP(ob1: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: HOLDING(sob: null)  
3 new Subgoals added as bellow: 
CLEAR(ob1: null)  
ON-TABLE(ob1: null)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: null)  
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: null)  
 num of try 51



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for STACK(sob: null,sunderob: null)   for sunderob: a 
actin bounds : STACK(sob: null,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: null,sunderob: a)  
              link condition: CLEAR(sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: null,sunderob: a)   for state CLEAR(sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
PICK-UP(ob1: b)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: b,sunderob: null)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
STACK(sob: null,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
Constrain added for predict thread ob1 not to be a
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 52



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
 Internal Action Selected : PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between PICK-UP(ob1: a)   to PUT-DOWN(ob: a)   for state HOLDING(ob: a)  
GOALS()   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
PUT-DOWN(ob: b)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
PICK-UP(ob1: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
PICK-UP(ob1: b)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
PUT-DOWN(ob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
PICK-UP(ob1: b)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
UNSTACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: b,sunderob: null)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
STACK(sob: null,sunderob: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
PICK-UP(ob1: a)   has Relation to link  from  PICK-UP(ob1: a)   to PUT-DOWN(ob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 53



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 54



Subgoal Selected : CLEAR(ob1: a)   for action PICK-UP(ob1: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: a 
actin bounds : UNSTACK(sob: null,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: null,sunderob: a)  
              link receiver  : PICK-UP(ob1: a)  
              link condition: CLEAR(ob1: a)  
3 new Subgoals added as bellow: 
ON(sob: null , sunderob: a)  
CLEAR(sob: null)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: null,sunderob: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: null,sunderob: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: null,sunderob: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: null,sunderob: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 55



Subgoal Selected : ON-TABLE(ob1: a)   for action PICK-UP(ob1: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: a 
actin bounds : PUT-DOWN(ob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : PUT-DOWN(ob: a)  
              link receiver  : PICK-UP(ob1: a)  
              link condition: CLEAR(ob1: a)  
Subgoal removed : CLEAR in action : PICK-UP(ob1: a)  
 Link Added in aditional subgoal remover: 
              link provider : PUT-DOWN(ob: a)  
              link receiver  : PICK-UP(ob1: a)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: a)  
 Link Added : 
              link provider : PUT-DOWN(ob: a)  
              link receiver  : PICK-UP(ob1: a)  
              link condition: ON-TABLE(ob1: a)  
1 new Subgoals added as bellow: 
HOLDING(ob: a)  

find thread for new action : PUT-DOWN(ob: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 56



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 57



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 58



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 59



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 60



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 61



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 62



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 63



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 64



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 65



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 66



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 67



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 68



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 69



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 70



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 71



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 72



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 73



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 74



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 75



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 76



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 77



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 78



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 79



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 80



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 81



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 82



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 83



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 84



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 85



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 86



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 87



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :PICK-UP(ob1: a)  
thread condition : CLEAR(ob1: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: a)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 88



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: b)  
thread action is :PICK-UP(ob1: b)  
thread condition : ON-TABLE(ob1: b)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 89



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 90



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 91



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 92



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 93



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 94



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 95



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 96



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: a)   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 97



Subgoal Selected : HOLDING(ob: a)   for action PUT-DOWN(ob: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: a 
actin bounds : UNSTACK(sob: a,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: a,sunderob: null)  
              link receiver  : PUT-DOWN(ob: a)  
              link condition: HOLDING(ob: a)  
3 new Subgoals added as bellow: 
ON(sob: a , sunderob: null)  
CLEAR(sob: a)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: a,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: a,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: null,sunderob: a)  
thread action is :UNSTACK(sob: a,sunderob: null)  
thread condition : CLEAR(sob: a)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: a,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 98



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: null)  
              link receiver  : STACK(sob: b,sunderob: null)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: null)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: null)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for 