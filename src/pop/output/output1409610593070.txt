POP START 
 
 

 num of try 1



Subgoal Selected : ON(on-1: a , on-2: e)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: a sunderob: e 
actin bounds : STACK(sob: a,sunderob: e)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: a,sunderob: e)  
              link receiver  : GOALS()  
              link condition: CLEAR(clear-1: a)  
Subgoal removed : CLEAR in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: a,sunderob: e)  
              link receiver  : GOALS()  
              link condition: ON(on-1: a , on-2: e)  
2 new Subgoals added as bellow: 
HOLDING(sob: a)  
CLEAR(sunderob: e)  

find thread for new action : STACK(sob: a,sunderob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: a,sunderob: e)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 2



Subgoal Selected : ON-TABLE(on-table-1: e)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: e 
actin bounds : PUT-DOWN(ob: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: e)  
              link receiver  : GOALS()  
              link condition: ON-TABLE(on-table-1: e)  
1 new Subgoals added as bellow: 
HOLDING(ob: e)  

find thread for new action : PUT-DOWN(ob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: e)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 3



Subgoal Selected : ON(on-1: h , on-2: i)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: h sunderob: i 
actin bounds : STACK(sob: h,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : GOALS()  
              link condition: CLEAR(clear-1: h)  
Subgoal removed : CLEAR in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : GOALS()  
              link condition: ON(on-1: h , on-2: i)  
2 new Subgoals added as bellow: 
HOLDING(sob: h)  
CLEAR(sunderob: i)  

find thread for new action : STACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: h,sunderob: i)  
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 4



Subgoal Selected : ON(on-1: i , on-2: d)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: i sunderob: d 
actin bounds : STACK(sob: i,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: i,sunderob: d)  
              link receiver  : GOALS()  
              link condition: ON(on-1: i , on-2: d)  
2 new Subgoals added as bellow: 
HOLDING(sob: i)  
CLEAR(sunderob: d)  

find thread for new action : STACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: i,sunderob: d)  
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 5



Subgoal Selected : ON-TABLE(on-table-1: d)   for action GOALS()  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : GOALS()  
              link condition: ON(on-1: g , on-2: f)  
Subgoal removed : ON in action : GOALS()  
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : GOALS()  
              link condition: ON-TABLE(on-table-1: f)  
Subgoal removed : ON-TABLE in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : GOALS()  
              link condition: ON-TABLE(on-table-1: d)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to GOALS()   for state ON-TABLE(on-table-1: d)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to GOALS()  
GOALS()   has Relation to link  from  INITIAL-STATE()   to GOALS()  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 6



Subgoal Selected : ON(on-1: b , on-2: c)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob: c 
actin bounds : STACK(sob: b,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : GOALS()  
              link condition: CLEAR(clear-1: b)  
Subgoal removed : CLEAR in action : GOALS()  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : GOALS()  
              link condition: ON(on-1: b , on-2: c)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: c)  

find thread for new action : STACK(sob: b,sunderob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: c)  
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 7



Subgoal Selected : ON(on-1: c , on-2: g)   for action GOALS()  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: c sunderob: g 
actin bounds : STACK(sob: c,sunderob: g)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: c,sunderob: g)  
              link receiver  : GOALS()  
              link condition: ON(on-1: c , on-2: g)  
2 new Subgoals added as bellow: 
HOLDING(sob: c)  
CLEAR(sunderob: g)  

find thread for new action : STACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: c,sunderob: g)  
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 8



Subgoal Selected : HOLDING(sob: a)   for action STACK(sob: a,sunderob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: a 
actin bounds : PICK-UP(ob1: a)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: a)  
              link receiver  : STACK(sob: a,sunderob: e)  
              link condition: HOLDING(sob: a)  
3 new Subgoals added as bellow: 
CLEAR(ob1: a)  
ON-TABLE(ob1: a)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: a)  
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: a)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 9



Subgoal Selected : CLEAR(sunderob: e)   for action STACK(sob: a,sunderob: e)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : STACK(sob: a,sunderob: e)  
              link condition: CLEAR(sunderob: e)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to STACK(sob: a,sunderob: e)   for state CLEAR(sunderob: e)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
STACK(sob: a,sunderob: e)   has Relation to link  from  INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 10



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: e 
actin bounds : PICK-UP(ob1: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: e)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
CLEAR(ob1: e)  
ON-TABLE(ob1: e)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: e)  
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action PICK-UP(ob1: e)  
 num of try 11



Subgoal Selected : HOLDING(sob: h)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: h 
actin bounds : UNSTACK(sob: h,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: h,sunderob: i)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
Subgoal removed : CLEAR in action : STACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: HOLDING(sob: h)  
3 new Subgoals added as bellow: 
ON(sob: h , sunderob: i)  
CLEAR(sob: h)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: h,sunderob: i)  
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 12



Subgoal Selected : HOLDING(sob: i)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: HOLDING(sob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 num of try 13



Subgoal Selected : CLEAR(sunderob: d)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: d 
actin bounds : UNSTACK(sob: null,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: i,sunderob: d)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: d)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: CLEAR(sunderob: d)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: d)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: d)  
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: d)   comes before action UNSTACK(sob: h,sunderob: i)  
 num of try 14



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: b,sunderob: c)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: b,sunderob: c)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: CLEAR(sunderob: c)  
Subgoal removed : CLEAR in action : STACK(sob: b,sunderob: c)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: c)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: c)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: c)  
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob d)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 15



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: b,sunderob: c)  
 num of try 16



Subgoal Selected : CLEAR(sunderob: g)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: g 
actin bounds : UNSTACK(sob: null,sunderob: g)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: CLEAR(sunderob: g)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 num of try 17



Subgoal Selected : CLEAR(ob1: a)   for action PICK-UP(ob1: a)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: a 
actin bounds : UNSTACK(sob: null,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: null,sunderob: a)  
              link receiver  : PICK-UP(ob1: a)  
              link condition: CLEAR(ob1: a)  
3 new Subgoals added as bellow: 
ON(sob: null , sunderob: a)  
CLEAR(sob: null)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: null,sunderob: a)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: null,sunderob: a)  
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: a)   Constrain is not equlity for (sob g)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 18



Subgoal Selected : ON-TABLE(ob1: a)   for action PICK-UP(ob1: a)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: a)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: a)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: a)  
              link condition: ON-TABLE(ob1: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: a)   for state ON-TABLE(ob1: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
STACK(sob: a,sunderob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 19



Subgoal Selected : CLEAR(ob1: e)   for action PICK-UP(ob1: e)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: e)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: e)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: e)  
              link condition: CLEAR(ob1: e)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: e)   for state CLEAR(ob1: e)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: e)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: e)  
STACK(sob: a,sunderob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: e)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: e)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: e)  
PICK-UP(ob1: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: e)  
Constrain added for predict thread sob not to be e
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 20



Subgoal Selected : ON-TABLE(ob1: e)   for action PICK-UP(ob1: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: e 
actin bounds : PUT-DOWN(ob: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: e)  
              link receiver  : PICK-UP(ob1: e)  
              link condition: ON-TABLE(ob1: e)  
1 new Subgoals added as bellow: 
HOLDING(ob: e)  

find thread for new action : PUT-DOWN(ob: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: e)  
Constrain added for action :PUT-DOWN (ob: e)   Constrain is not equlity for (ob a)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: e)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: e)   Constrain is not equlity for (ob i)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: e)   Constrain is not equlity for (ob b)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: e)   Constrain is not equlity for (ob c)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 21



Subgoal Selected : ON(sob: h , sunderob: i)   for action UNSTACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: h sunderob: i 
actin bounds : STACK(sob: h,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : UNSTACK(sob: h,sunderob: i)  
              link condition: CLEAR(sob: h)  
Subgoal removed : CLEAR in action : UNSTACK(sob: h,sunderob: i)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : UNSTACK(sob: h,sunderob: i)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: h,sunderob: i)  
              link receiver  : UNSTACK(sob: h,sunderob: i)  
              link condition: ON(sob: h , sunderob: i)  
2 new Subgoals added as bellow: 
HOLDING(sob: h)  
CLEAR(sunderob: i)  

find thread for new action : STACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: h,sunderob: i)  
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 22



Subgoal Selected : CLEAR(ob1: i)   for action PICK-UP(ob1: i)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: i)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: i)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: i)  
              link condition: CLEAR(ob1: i)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: i)   for state CLEAR(ob1: i)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
STACK(sob: a,sunderob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
STACK(sob: i,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
PICK-UP(ob1: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
UNSTACK(sob: h,sunderob: i)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
PICK-UP(ob1: i)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: i)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for predict thread sob not to be i
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: i,sunderob: d)  
 num of try 23



Subgoal Selected : ON-TABLE(ob1: i)   for action PICK-UP(ob1: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: i 
actin bounds : PUT-DOWN(ob: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: i)  
              link receiver  : PICK-UP(ob1: i)  
              link condition: ON-TABLE(ob1: i)  
1 new Subgoals added as bellow: 
HOLDING(ob: i)  

find thread for new action : PUT-DOWN(ob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: i)  
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob a)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob e)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob b)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: i)   Constrain is not equlity for (ob c)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 24



Subgoal Selected : ON(sob: i , sunderob: d)   for action UNSTACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: i sunderob: d 
actin bounds : STACK(sob: i,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: i,sunderob: d)  
              link receiver  : UNSTACK(sob: i,sunderob: d)  
              link condition: CLEAR(sob: i)  
Subgoal removed : CLEAR in action : UNSTACK(sob: i,sunderob: d)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: i,sunderob: d)  
              link receiver  : UNSTACK(sob: i,sunderob: d)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: i,sunderob: d)  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: i,sunderob: d)  
              link receiver  : UNSTACK(sob: i,sunderob: d)  
              link condition: ON(sob: i , sunderob: d)  
2 new Subgoals added as bellow: 
HOLDING(sob: i)  
CLEAR(sunderob: d)  

find thread for new action : STACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: i,sunderob: d)  
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :PICK-UP(ob1: i)   to STACK(sob: i,sunderob: d)  
thread action is :STACK(sob: i,sunderob: d)  
thread condition : HOLDING(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: i,sunderob: d)   comes before action PICK-UP(ob1: i)  
 num of try 25



Subgoal Selected : ON(sob: b , sunderob: c)   for action UNSTACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: b sunderob: c 
actin bounds : STACK(sob: b,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : UNSTACK(sob: b,sunderob: c)  
              link condition: CLEAR(sob: b)  
Subgoal removed : CLEAR in action : UNSTACK(sob: b,sunderob: c)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : UNSTACK(sob: b,sunderob: c)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: c)  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : UNSTACK(sob: b,sunderob: c)  
              link condition: ON(sob: b , sunderob: c)  
2 new Subgoals added as bellow: 
HOLDING(sob: b)  
CLEAR(sunderob: c)  

find thread for new action : STACK(sob: b,sunderob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: b,sunderob: c)  
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 26



Subgoal Selected : CLEAR(ob1: c)   for action PICK-UP(ob1: c)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: c)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : PICK-UP(ob1: c)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : PICK-UP(ob1: c)  
              link condition: CLEAR(ob1: c)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to PICK-UP(ob1: c)   for state CLEAR(ob1: c)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
STACK(sob: a,sunderob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
STACK(sob: i,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
STACK(sob: c,sunderob: g)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PICK-UP(ob1: e)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PICK-UP(ob1: i)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
UNSTACK(sob: b,sunderob: c)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
PICK-UP(ob1: c)   has Relation to link  from  INITIAL-STATE()   to PICK-UP(ob1: c)  
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Constrain added for predict thread sob not to be c
Thread Resolver Starts ....  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: c,sunderob: g)  
 num of try 27



Subgoal Selected : ON-TABLE(ob1: c)   for action PICK-UP(ob1: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: c 
actin bounds : PUT-DOWN(ob: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: c)  
              link receiver  : PICK-UP(ob1: c)  
              link condition: ON-TABLE(ob1: c)  
1 new Subgoals added as bellow: 
HOLDING(ob: c)  

find thread for new action : PUT-DOWN(ob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: c)  
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob a)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob e)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob i)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob b)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 28



Subgoal Selected : ON(sob: c , sunderob: g)   for action UNSTACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: c sunderob: g 
actin bounds : STACK(sob: c,sunderob: g)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: c,sunderob: g)  
              link receiver  : UNSTACK(sob: c,sunderob: g)  
              link condition: CLEAR(sob: c)  
Subgoal removed : CLEAR in action : UNSTACK(sob: c,sunderob: g)  
 Link Added in aditional subgoal remover: 
              link provider : STACK(sob: c,sunderob: g)  
              link receiver  : UNSTACK(sob: c,sunderob: g)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: c,sunderob: g)  
              link receiver  : UNSTACK(sob: c,sunderob: g)  
              link condition: ON(sob: c , sunderob: g)  
2 new Subgoals added as bellow: 
HOLDING(sob: c)  
CLEAR(sunderob: g)  

find thread for new action : STACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: c,sunderob: g)  
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :PICK-UP(ob1: c)   to STACK(sob: c,sunderob: g)  
thread action is :STACK(sob: c,sunderob: g)  
thread condition : HOLDING(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: c,sunderob: g)   comes before action PICK-UP(ob1: c)  
 num of try 29



Subgoal Selected : ON(sob: null , sunderob: a)   for action UNSTACK(sob: null,sunderob: a)  
Start Searching in internal actions.
 Internal Action Selected : INITIAL-STATE()  
bounding operation for UNSTACK(sob: null,sunderob: a)   for sob: b 
actin bounds : UNSTACK(sob: b,sunderob: a)  
Clean All Subgoals that satisfied by this link start....
 Link Added in aditional subgoal remover: 
              link provider : INITIAL-STATE()  
              link receiver  : UNSTACK(sob: b,sunderob: a)  
              link condition: ARM-EMPTY()  
Subgoal removed : ARM-EMPTY in action : UNSTACK(sob: b,sunderob: a)  
end of removing subgoals.
 Link Added : 
              link provider : INITIAL-STATE()  
              link receiver  : UNSTACK(sob: b,sunderob: a)  
              link condition: ON(sob: b , sunderob: a)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)   for state ON(sob: b , sunderob: a)  
INITIAL-STATE()   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
GOALS()   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
STACK(sob: a,sunderob: e)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
PUT-DOWN(ob: e)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
STACK(sob: i,sunderob: d)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
STACK(sob: c,sunderob: g)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
PICK-UP(ob1: e)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
PICK-UP(ob1: i)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
PICK-UP(ob1: c)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: a)   has Relation to link  from  INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 30



Subgoal Selected : CLEAR(sob: b)   for action UNSTACK(sob: b,sunderob: a)  
Start Searching in internal actions.
 Internal Action Selected : STACK(sob: b,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: b,sunderob: c)  
              link receiver  : UNSTACK(sob: b,sunderob: a)  
              link condition: CLEAR(sob: b)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: a)   for state CLEAR(sob: b)  
GOALS()   has Relation to link  from  STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: a)  
STACK(sob: a,sunderob: e)   has Relation to link  from  STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: a)  
STACK(sob: b,sunderob: c)   has Relation to link  from  STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: a)  
PICK-UP(ob1: a)   has Relation to link  from  STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: a)  
UNSTACK(sob: b,sunderob: a)   has Relation to link  from  STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: a)  
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 31



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: e 
actin bounds : PICK-UP(ob1: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: e)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
CLEAR(ob1: e)  
ON-TABLE(ob1: e)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: e)  
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action PICK-UP(ob1: e)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: e)  
 action PICK-UP(ob1: e)   comes before action PICK-UP(ob1: e)  
 action PICK-UP(ob1: e)   comes before action PICK-UP(ob1: e)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 32



Subgoal Selected : HOLDING(sob: h)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: h 
actin bounds : PICK-UP(ob1: h)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: h)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: HOLDING(sob: h)  
3 new Subgoals added as bellow: 
CLEAR(ob1: h)  
ON-TABLE(ob1: h)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: h)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: h)  
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: h)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: h)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: h)  
 action PICK-UP(ob1: e)   comes before action PICK-UP(ob1: h)  
 action PICK-UP(ob1: i)   comes before action PICK-UP(ob1: h)  
 action PICK-UP(ob1: h)   comes before action STACK(sob: i,sunderob: d)  
 action PICK-UP(ob1: h)   comes before action STACK(sob: b,sunderob: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 33



Subgoal Selected : CLEAR(sunderob: i)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: i 
actin bounds : UNSTACK(sob: null,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: h,sunderob: i)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: HOLDING(sob: h)  
Subgoal removed : HOLDING in action : STACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
3 new Subgoals added as bellow: 
ON(sob: h , sunderob: i)  
CLEAR(sob: h)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: h,sunderob: i)  
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: e)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 34



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: i 
actin bounds : UNSTACK(sob: i,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: null)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: null)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: null)  
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: null)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: null)  
 action PICK-UP(ob1: e)   comes before action UNSTACK(sob: i,sunderob: null)  
 action UNSTACK(sob: i,sunderob: null)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: i,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 35



Subgoal Selected : HOLDING(sob: i)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: HOLDING(sob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :PUT-DOWN(ob: i)   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ON-TABLE(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: i)  
 action PICK-UP(ob1: e)   comes before action PICK-UP(ob1: i)  
 action PICK-UP(ob1: i)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action PICK-UP(ob1: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 36



Subgoal Selected : CLEAR(sunderob: d)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: d 
actin bounds : UNSTACK(sob: null,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: i,sunderob: d)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: i,sunderob: d)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: HOLDING(sob: i)  
Subgoal removed : HOLDING in action : STACK(sob: i,sunderob: d)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: d)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: CLEAR(sunderob: d)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: d)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: d)  
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: d)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: d)  
 action PICK-UP(ob1: e)   comes before action UNSTACK(sob: i,sunderob: d)  
 action UNSTACK(sob: i,sunderob: d)   comes before action STACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: i,sunderob: d)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 37



Subgoal Selected : HOLDING(sob: b)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: b 
actin bounds : PICK-UP(ob1: b)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: b)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: HOLDING(sob: b)  
3 new Subgoals added as bellow: 
CLEAR(ob1: b)  
ON-TABLE(ob1: b)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: b)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: b)  
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: b)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: b)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: b)  
 action PICK-UP(ob1: e)   comes before action PICK-UP(ob1: b)  
 action PICK-UP(ob1: b)   comes before action STACK(sob: h,sunderob: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 38



Subgoal Selected : CLEAR(sunderob: c)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: c 
actin bounds : UNSTACK(sob: null,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: b,sunderob: c)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: b,sunderob: c)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: HOLDING(sob: b)  
Subgoal removed : HOLDING in action : STACK(sob: b,sunderob: c)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: c)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: CLEAR(sunderob: c)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: c)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: c)  
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: e)   comes before action UNSTACK(sob: b,sunderob: c)  
 action UNSTACK(sob: b,sunderob: c)   comes before action STACK(sob: h,sunderob: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 39



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: null)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: null)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: null)  
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: null)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 40



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: CLEAR(sunderob: g)  
Subgoal removed : CLEAR in action : STACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: g)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 41



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: e 
actin bounds : UNSTACK(sob: e,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: null)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
ON(sob: e , sunderob: null)  
CLEAR(sob: e)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: e,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: e,sunderob: null)  
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action UNSTACK(sob: e,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 42



Subgoal Selected : CLEAR(sunderob: i)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: i 
actin bounds : UNSTACK(sob: null,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
3 new Subgoals added as bellow: 
ON(sob: h , sunderob: i)  
CLEAR(sob: h)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: h,sunderob: i)  
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: h,sunderob: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 43



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: i 
actin bounds : UNSTACK(sob: i,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: null)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: null)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: null)  
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: null)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 44



Subgoal Selected : CLEAR(sunderob: d)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: d 
actin bounds : UNSTACK(sob: null,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: i,sunderob: d)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: d)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: CLEAR(sunderob: d)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: d)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: d)  
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: d)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: d)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 45



Subgoal Selected : CLEAR(sunderob: c)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: c 
actin bounds : UNSTACK(sob: null,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: b,sunderob: c)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: c)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: CLEAR(sunderob: c)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: c)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: c)  
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 46



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: null)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: null)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: null)  
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: null)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 47



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: g)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 48



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: e 
actin bounds : UNSTACK(sob: e,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: null)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
ON(sob: e , sunderob: null)  
CLEAR(sob: e)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: e,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: e,sunderob: null)  
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action UNSTACK(sob: e,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 49



Subgoal Selected : CLEAR(sunderob: i)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: i 
actin bounds : UNSTACK(sob: null,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
3 new Subgoals added as bellow: 
ON(sob: h , sunderob: i)  
CLEAR(sob: h)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: h,sunderob: i)  
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: h,sunderob: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 50



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 51



Subgoal Selected : CLEAR(sunderob: d)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: d 
actin bounds : UNSTACK(sob: null,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: i,sunderob: d)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: d)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: CLEAR(sunderob: d)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: d)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: d)  
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: d)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: d)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 52



Subgoal Selected : CLEAR(sunderob: c)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: c 
actin bounds : UNSTACK(sob: null,sunderob: c)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: b,sunderob: c)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: b,sunderob: c)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: CLEAR(sunderob: c)  
3 new Subgoals added as bellow: 
ON(sob: b , sunderob: c)  
CLEAR(sob: b)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: b,sunderob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: b,sunderob: c)  
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: b,sunderob: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: b,sunderob: c)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: b,sunderob: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 53



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: null)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: null)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: null)  
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: null)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 54



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: g)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 55



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: e 
actin bounds : UNSTACK(sob: e,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: null)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
ON(sob: e , sunderob: null)  
CLEAR(sob: e)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: e,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: e,sunderob: null)  
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action UNSTACK(sob: e,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 56



Subgoal Selected : CLEAR(sunderob: i)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: i 
actin bounds : UNSTACK(sob: null,sunderob: i)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: h,sunderob: i)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: h,sunderob: i)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
3 new Subgoals added as bellow: 
ON(sob: h , sunderob: i)  
CLEAR(sob: h)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: h,sunderob: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: h,sunderob: i)  
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: h,sunderob: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: h,sunderob: i)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: h,sunderob: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 57



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: i 
actin bounds : UNSTACK(sob: i,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: null)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: null)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: null)  
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: null)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 58



Subgoal Selected : CLEAR(sunderob: d)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob: d 
actin bounds : UNSTACK(sob: null,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: i,sunderob: d)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: d)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: CLEAR(sunderob: d)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: d)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: d)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: d)  
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: d)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: d)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: d)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: d)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 59



Subgoal Selected : CLEAR(sunderob: c)   for action STACK(sob: b,sunderob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PUT-DOWN(ob: null)  
bounding operation for PUT-DOWN(ob: null)   for ob: c 
actin bounds : PUT-DOWN(ob: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PUT-DOWN(ob: c)  
              link receiver  : STACK(sob: b,sunderob: c)  
              link condition: CLEAR(sunderob: c)  
1 new Subgoals added as bellow: 
HOLDING(ob: c)  

find thread for new action : PUT-DOWN(ob: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PUT-DOWN(ob: c)  
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob e)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob i)
but now i dont consider constrain
 Thread find :
Thread Link :PICK-UP(ob1: c)   to STACK(sob: c,sunderob: g)  
thread action is :PUT-DOWN(ob: c)  
thread condition : HOLDING(ob: c)  
Ignore all conditions on this link and action 
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob h)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob i)
but now i dont consider constrain
Constrain added for action :PUT-DOWN (ob: c)   Constrain is not equlity for (ob b)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PUT-DOWN(ob: c)   comes before action PICK-UP(ob1: c)  
 num of try 60



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
 Internal Action Selected : UNSTACK(sob: c,sunderob: g)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)   for state HOLDING(ob: c)  
GOALS()   has Relation to link  from  UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)  
STACK(sob: c,sunderob: g)   has Relation to link  from  UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)  
UNSTACK(sob: b,sunderob: c)   has Relation to link  from  UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)  
PICK-UP(ob1: c)   has Relation to link  from  UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)  
UNSTACK(sob: c,sunderob: g)   has Relation to link  from  UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)  
PUT-DOWN(ob: c)   has Relation to link  from  UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)  
 Thread find :
Thread Link :UNSTACK(sob: c,sunderob: g)   to PUT-DOWN(ob: c)  
thread action is :STACK(sob: c,sunderob: g)  
thread condition : HOLDING(ob: c)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action STACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: c,sunderob: g)  
 num of try 61



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: g)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 62



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: e 
actin bounds : UNSTACK(sob: e,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: null)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
ON(sob: e , sunderob: null)  
CLEAR(sob: e)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: e,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: e,sunderob: null)  
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action UNSTACK(sob: e,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 63



Subgoal Selected : CLEAR(sunderob: i)   for action STACK(sob: h,sunderob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: i 
actin bounds : STACK(sob: i,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: i,sunderob: null)  
              link receiver  : STACK(sob: h,sunderob: i)  
              link condition: CLEAR(sunderob: i)  
2 new Subgoals added as bellow: 
HOLDING(sob: i)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: i,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: i,sunderob: null)  
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :PICK-UP(ob1: i)   to STACK(sob: i,sunderob: d)  
thread action is :STACK(sob: i,sunderob: null)  
thread condition : HOLDING(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: i,sunderob: d)   to STACK(sob: i,sunderob: d)  
thread action is :STACK(sob: i,sunderob: null)  
thread condition : HOLDING(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: i,sunderob: null)   comes before action PICK-UP(ob1: i)  
 action STACK(sob: i,sunderob: null)   comes before action UNSTACK(sob: i,sunderob: d)  
 num of try 64



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
 Internal Action Selected : UNSTACK(sob: i,sunderob: d)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: d)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
Start Finding Thread for Internal Actions: 
Thread finding Starts ....
Internal Action used and must find actions that is thread for link between UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)   for state HOLDING(ob: i)  
GOALS()   has Relation to link  from  UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)  
STACK(sob: i,sunderob: d)   has Relation to link  from  UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)  
UNSTACK(sob: h,sunderob: i)   has Relation to link  from  UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)  
PICK-UP(ob1: i)   has Relation to link  from  UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)  
UNSTACK(sob: i,sunderob: d)   has Relation to link  from  UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)  
PUT-DOWN(ob: i)   has Relation to link  from  UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)  
 Thread find :
Thread Link :UNSTACK(sob: i,sunderob: d)   to PUT-DOWN(ob: i)  
thread action is :STACK(sob: i,sunderob: d)  
thread condition : HOLDING(ob: i)  
Ignore all conditions on this link and action 
Thread Resolver Starts ....  
 action STACK(sob: i,sunderob: d)   comes before action UNSTACK(sob: i,sunderob: d)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 65



Subgoal Selected : CLEAR(sunderob: d)   for action STACK(sob: i,sunderob: d)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob: d 
actin bounds : STACK(sob: d,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: d,sunderob: null)  
              link receiver  : STACK(sob: i,sunderob: d)  
              link condition: CLEAR(sunderob: d)  
2 new Subgoals added as bellow: 
HOLDING(sob: d)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: d,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: d,sunderob: null)  
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 66



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
 Internal Action Selected : UNSTACK(sob: c,sunderob: g)  
program find a cycle if we add the link so try another ways.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: null)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: null)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: null)  
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 67



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: g)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 68



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: e 
actin bounds : PICK-UP(ob1: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: e)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
CLEAR(ob1: e)  
ON-TABLE(ob1: e)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: e)  
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action PICK-UP(ob1: e)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 69



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: null)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 70



Subgoal Selected : HOLDING(sob: d)   for action STACK(sob: d,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: d 
actin bounds : UNSTACK(sob: d,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: d,sunderob: null)  
              link receiver  : STACK(sob: d,sunderob: null)  
              link condition: HOLDING(sob: d)  
3 new Subgoals added as bellow: 
ON(sob: d , sunderob: null)  
CLEAR(sob: d)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: d,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: d,sunderob: null)  
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: d,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 71



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: d,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob:  null  
actin bounds : UNSTACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: d,sunderob: null)  
 Link Added in aditional subgoal remover: 
              link provider : UNSTACK(sob: d,sunderob: null)  
              link receiver  : STACK(sob: d,sunderob: null)  
              link condition: HOLDING(sob: d)  
Subgoal removed : HOLDING in action : STACK(sob: d,sunderob: null)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: d,sunderob: null)  
              link receiver  : STACK(sob: d,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
3 new Subgoals added as bellow: 
ON(sob: d , sunderob: null)  
CLEAR(sob: d)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: d,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: d,sunderob: null)  
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: d,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 72



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ON-TABLE(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 73



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 74



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: e 
actin bounds : PICK-UP(ob1: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: e)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
CLEAR(ob1: e)  
ON-TABLE(ob1: e)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: e)  
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action PICK-UP(ob1: e)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 75



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: null)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 76



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: d,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob:  null  
actin bounds : UNSTACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: d,sunderob: null)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: d,sunderob: null)  
              link receiver  : STACK(sob: d,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
3 new Subgoals added as bellow: 
ON(sob: d , sunderob: null)  
CLEAR(sob: d)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: d,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: d,sunderob: null)  
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: d,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: d,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: d,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 77



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: null)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: null)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: null)  
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 78



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 79



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: e 
actin bounds : UNSTACK(sob: e,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: null)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
ON(sob: e , sunderob: null)  
CLEAR(sob: e)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: e,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: e,sunderob: null)  
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action UNSTACK(sob: e,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 80



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: i 
actin bounds : UNSTACK(sob: i,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: i,sunderob: null)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
ON(sob: i , sunderob: null)  
CLEAR(sob: i)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: i,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: i,sunderob: null)  
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: null)   to STACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: i,sunderob: null)  
thread condition : CLEAR(sob: i)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: i,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: i,sunderob: null)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: i,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 81



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: d,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: null,sunderob: null)  
              link receiver  : STACK(sob: d,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: null)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: null,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: null,sunderob: null)  
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 82



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
 Internal Action Selected : UNSTACK(sob: c,sunderob: g)  
program find a cycle if we add the link so try another ways.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: null)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: null)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: null)  
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 83



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: g)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 84



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: e 
actin bounds : PICK-UP(ob1: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: e)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
CLEAR(ob1: e)  
ON-TABLE(ob1: e)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: e)  
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action PICK-UP(ob1: e)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 85



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: null)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 86



Subgoal Selected : HOLDING(sob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob:  null  
actin bounds : UNSTACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: null,sunderob: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: HOLDING(sob: null)  
3 new Subgoals added as bellow: 
ON(sob: null , sunderob: null)  
CLEAR(sob: null)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: null,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: null,sunderob: null)  
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: null,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 87



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob:  null  
actin bounds : UNSTACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: null,sunderob: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
3 new Subgoals added as bellow: 
ON(sob: null , sunderob: null)  
CLEAR(sob: null)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: null,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: null,sunderob: null)  
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: null,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: null,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 88



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ON-TABLE(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 89



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to STACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: c)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 90



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: e 
actin bounds : PICK-UP(ob1: e)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: e)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
CLEAR(ob1: e)  
ON-TABLE(ob1: e)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: e)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: e)  
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: e)  
thread condition : CLEAR(ob1: e)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: e)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: e)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action PICK-UP(ob1: e)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 91



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: null)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 92



Subgoal Selected : HOLDING(sob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1:  null  
actin bounds : PICK-UP(ob1: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: HOLDING(sob: null)  
3 new Subgoals added as bellow: 
CLEAR(ob1: null)  
ON-TABLE(ob1: null)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: null)  
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 93



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: STACK(sob: null,sunderob: null)  
bounding operation for STACK(sob: null,sunderob: null)   for sob:  null  
actin bounds : STACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : STACK(sob: null,sunderob: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
2 new Subgoals added as bellow: 
HOLDING(sob: null)  
CLEAR(sunderob: null)  

find thread for new action : STACK(sob: null,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :STACK(sob: null,sunderob: null)  
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :STACK (sob: null,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
no thread found
Thread Resolver Starts ....  
There is no thread to Resolve
 num of try 94



Subgoal Selected : HOLDING(ob: c)   for action PUT-DOWN(ob: c)  
Start Searching in internal actions.
 Internal Action Selected : UNSTACK(sob: c,sunderob: g)  
program find a cycle if we add the link so try another ways.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: c 
actin bounds : PICK-UP(ob1: c)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: c)  
              link receiver  : PUT-DOWN(ob: c)  
              link condition: HOLDING(ob: c)  
3 new Subgoals added as bellow: 
CLEAR(ob1: c)  
ON-TABLE(ob1: c)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: c)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: c)  
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: c)  
thread condition : ON-TABLE(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: c)  
thread condition : CLEAR(ob1: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: c)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: c)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: c)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 95



Subgoal Selected : HOLDING(sob: c)   for action STACK(sob: c,sunderob: g)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: c 
actin bounds : UNSTACK(sob: c,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
actin bounds : UNSTACK(sob: c,sunderob: g)  
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: c,sunderob: g)  
              link receiver  : STACK(sob: c,sunderob: g)  
              link condition: HOLDING(sob: c)  
3 new Subgoals added as bellow: 
ON(sob: c , sunderob: g)  
CLEAR(sob: c)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: c,sunderob: g)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: c,sunderob: g)  
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: b,sunderob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob g)
but now i dont consider constrain
 Thread find :
Thread Link :PUT-DOWN(ob: c)   to STACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: c,sunderob: g)  
thread condition : CLEAR(sob: c)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: c,sunderob: g)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action UNSTACK(sob: c,sunderob: g)   comes before action UNSTACK(sob: b,sunderob: c)  
 action PICK-UP(ob1: a)   comes before action UNSTACK(sob: c,sunderob: g)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 96



Subgoal Selected : HOLDING(ob: e)   for action PUT-DOWN(ob: e)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sob: e 
actin bounds : UNSTACK(sob: e,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: e,sunderob: null)  
              link receiver  : PUT-DOWN(ob: e)  
              link condition: HOLDING(ob: e)  
3 new Subgoals added as bellow: 
ON(sob: e , sunderob: null)  
CLEAR(sob: e)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: e,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: e,sunderob: null)  
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob f)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to STACK(sob: a,sunderob: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : CLEAR(sob: e)  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob i)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob d)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob c)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob g)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :UNSTACK(sob: e,sunderob: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sunderob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob b)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob g)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob c)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob i)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: e,sunderob: null)   Constrain is not equlity for (sob d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action STACK(sob: a,sunderob: e)   comes before action UNSTACK(sob: e,sunderob: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 97



Subgoal Selected : HOLDING(ob: i)   for action PUT-DOWN(ob: i)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1: i 
actin bounds : PICK-UP(ob1: i)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: i)  
              link receiver  : PUT-DOWN(ob: i)  
              link condition: HOLDING(ob: i)  
3 new Subgoals added as bellow: 
CLEAR(ob1: i)  
ON-TABLE(ob1: i)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: i)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: i)  
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
 Thread find :
Thread Link :UNSTACK(sob: h,sunderob: i)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :STACK(sob: i,sunderob: d)   to UNSTACK(sob: i,sunderob: d)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: i)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: i,sunderob: null)   to STACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: i)  
thread condition : CLEAR(ob1: i)  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: i)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: i)   comes before action UNSTACK(sob: h,sunderob: i)  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: i)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 98



Subgoal Selected : HOLDING(sob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1:  null  
actin bounds : PICK-UP(ob1: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: HOLDING(sob: null)  
3 new Subgoals added as bellow: 
CLEAR(ob1: null)  
ON-TABLE(ob1: null)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: null)  
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 null)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 99



Subgoal Selected : HOLDING(sob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: PICK-UP(ob1: null)  
bounding operation for PICK-UP(ob1: null)   for ob1:  null  
actin bounds : PICK-UP(ob1: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : PICK-UP(ob1: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: HOLDING(sob: null)  
3 new Subgoals added as bellow: 
CLEAR(ob1: null)  
ON-TABLE(ob1: null)  
ARM-EMPTY()  

find thread for new action : PICK-UP(ob1: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :PICK-UP(ob1: null)  
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 f)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 d)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: a)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 a)
but now i dont consider constrain
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: e)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 e)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 h)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: h,sunderob: i)   to UNSTACK(sob: h,sunderob: i)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: i)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: b,sunderob: c)   to UNSTACK(sob: b,sunderob: c)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to PICK-UP(ob1: c)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
 Thread find :
Thread Link :STACK(sob: c,sunderob: g)   to UNSTACK(sob: c,sunderob: g)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
 Thread find :
Thread Link :INITIAL-STATE()   to UNSTACK(sob: b,sunderob: a)  
thread action is :PICK-UP(ob1: null)  
thread condition : ARM-EMPTY()  
Ignore all conditions on this link and action 
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 b)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 g)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 c)
but now i dont consider constrain
Constrain added for action :PICK-UP (ob1: null)   Constrain is not equlity for (ob1 i)
but now i dont consider constrain
Thread Resolver Starts ....  
 action PICK-UP(ob1: a)   comes before action PICK-UP(ob1: null)  
All Operation Failed in this turn of loop becuase adding order cause a loop.
the plan back to previous state and try another way to find solution.
 num of try 100



Subgoal Selected : CLEAR(sunderob: null)   for action STACK(sob: null,sunderob: null)  
Start Searching in internal actions.
Internal Action not found or selected.
Start Searching an operators Satisfies the subgoal.
operators selected and goes for bounding. the operator is: UNSTACK(sob: null,sunderob: null)  
bounding operation for UNSTACK(sob: null,sunderob: null)   for sunderob:  null  
actin bounds : UNSTACK(sob: null,sunderob: null)  
Clean All Subgoals that satisfied by this link start....
end of removing subgoals.
 Link Added : 
              link provider : UNSTACK(sob: null,sunderob: null)  
              link receiver  : STACK(sob: null,sunderob: null)  
              link condition: CLEAR(sunderob: null)  
3 new Subgoals added as bellow: 
ON(sob: null , sunderob: null)  
CLEAR(sob: null)  
ARM-EMPTY()  

find thread for new action : UNSTACK(sob: null,sunderob: null)  
Thread finding Starts ....
external action used and this actions must check to not delete any conditions of all links in plan. our action is :UNSTACK(sob: null,sunderob: null)  
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob a)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sunderob e)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,sunderob: null)   Constrain is not equlity for (sob h)
but now i dont consider constrain
Constrain added for action :UNSTACK (sob: null,s